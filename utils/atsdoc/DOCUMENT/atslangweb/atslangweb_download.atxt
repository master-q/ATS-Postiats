%{
//
dynload "libatsdoc/dynloadall.dats"
//
staload STDIO = "libc/SATS/stdio.sats"
//
(* ****** ****** *)
//
#define ISTEMP 0
//
#include "atslangwebatxt.dats"
//
val _ATSLANGWEBDOWNLOAD: atext =
  strcst"<strong>Download</strong>"
val () = theAtextMap_insert_str ("ATSLANGWEBDOWNLOAD", _ATSLANGWEBDOWNLOAD)
//
(* ****** ****** *)
//
#include "atslangweb_layout.dats"
//
(* ****** ****** *)

val theCSSfilr =
  $STDIO.fopen_ref_exn ("styles/atslangweb_download.css", file_mode_w)
val () = fprintf (theCSSfilr,
  "@import url(%s/styles/atslangweb_temp.css);\n\n", @(ATSLANGWEBROOT)
) // end of [val]
val () = fprintf (theCSSfilr,
  "@import url(%s/styles/atslangweb_jsddm_menu.css);\n\n", @(ATSLANGWEBROOT)
) // end of [val]

fun addcssrule
  (rule: string): atext = let
  val () = fprint_string (theCSSfilr, rule) in atext_nil ()
end // end of [addcssrule]

(* ****** ****** *)
//
%}

#strsub[theStyleSheetLink]("\
#ATSLANGWEBROOTget()/styles/atslangweb_download.css\
")

#ignoretxt(
#strsub[thePageHeaderSeparator]('\
<div class="Page-mysitelinks">
#mysitelinks2("DOWNLOAD")
</div>
'))

#addcssrule("\
\#thePageBody-prop {
padding-left: 10px ;
padding-right: 10px ;
}
")

#strsub[thePageBody]('\
<div id="thePageBody-prop">
<h1>Download</h1>

#menu('\
#litxt(
#ulink("\#ATS_packages", "ATS packages for download")
)
#litxt(
#ulink("\#installation_require", "Requirements for installation")
)
#litxt(
#ulink("\#installation_precomp", "Installation from a precompiled package")
)
#litxt(
#ulink("\#installation_source", "Installation through source compilation")
)
#litxt(
#ulink("\#installation_bootstrap", "Installation through bootstrapping")
)
')

#HR(2)

<h2>#uid("ATS_packages", "ATS packages for download")</h2>

#para('\

ATS is #ulink("http://www.opensource.org", "Open Source") and
#ulink("http://www.gnu.org/philosophy/free-sw.html", "Free Software"), and it
is freely available under the GNU GENERAL PUBLIC LICENSE version 3
(#ulink("http://www.gnu.org/licenses/gpl-3.0.html", "GPLv3")) as is published
by the Free Software Foundation.  The current implementation of ATS is
given the name ATS/Anairiats or simply Anairiats.  The latest released
ATS/Anairats packages are available at the following links:

')#comment("para")

#menu('\
#litxt(
#para('\
The current #strong("stable") release is
<a href="http://sourceforge.net/projects/ats-lang/download">ats-lang-anairiats-0.2.7</a> (2.4MB)
'))
#litxt(
#para('\
The current #strong("unstable") version is
#ulink1(
  "http://www.cs.bu.edu/~hwxi/ATS/IMPLEMENTATION/Anairiats/ats-lang-anairiats-0.2.8-unstable.tgz"
, "ats-lang-anairiats-0.2.8-unstable"
)
'))
')#comment("menu")

#HR(1)

<h2>#uid("installation_require", "Requirements for installation")</h2>

#para('\

The following requirements are supposed to be met in order to install ATS:

')

#menu('\
#lisub('\
Operating System requirement: ATS is supported under the following
operating systems:
#menu('\
#lisub("Linux")
#lisub("Windows with Cygwin")
#lisub("MacOS X (currently no GC support for multithreading)")
#lisub("SunOS (currently no GC support for multithreading)")
#lisub("BSD Unix (currently no GC support for multithreading)")
')')
#lisub("Programming Language requirement: GNU C Compiler (GCC).")
')#comment("menu")

#para("\

We plan to port ATS to other platforms in the future. If you have succeeded
in porting ATS to a platform not listed here, please drop us a note.

")

#para('\

The GMP library (libgmp.a), which is in general included in a GNU/Linux
distribution, is currently <em>optional</em> and it may be required for
installing a release of ATS in the future.  Please see <a
href="http://gmplib.org">http://gmplib.org</a> for more details on GMP.

')

#HR(1)

<h2>#uid(
"installation_precomp", "Installation from a precompiled package"
)</h2>


#para("\
This installation method currently only supports the following platforms:
")

#menu('\
#lisub("Linux on i386 (x86-32)")
#lisub("Linux on AMD64 (x86-64)")
#lisub("SunOS on UltraSparc")
')#comment("menu")

#para("\

Please first download a compressed tarball containing a precompiled release of
ATS from the following site that suits your platform:

")

#pcenter('\
<a href="http://sourceforge.net/projects/ats-lang/download">http://sourceforge.net/projects/ats-lang/download</a>
')#comment("pcenter")

#para("\
Let x.x.x be the version number of the downloaded ATS package.
")

#menu('\

#litxt(
#para("\
(#strong("Option 1")) You can untar the tarball in the root directory (that is,
the directory #filename("/.")) and then set the shell environment variables
ATSHOME and ATSHOMERELOC to #filename("/usr/share/atshome") and
#filename("ATS-x.x.x"), respectively. This option most likely requires root
access.
"))

#litxt(
#para("\

(#strong("Option 2")) You can untar the tarball in the directory
#filename("/tmp"), and then move the directory /tmp/usr/share/atshome into
a directory of your choice, say, #filename("FOO"), and then set the
environment variables ATSHOME and ATSHOMERELOC to #filename("FOO/atshome")
and #filename("ATS-x.x.x"), repectively. In addition, you need to put
#filename("$ATSHOME/bin") on your execution path or create symbolic links
to the executables #filename("$ATSHOME/bin/atscc") and
#filename("$ATSHOME/bin/atsopt") in a directory that is already on your
execution path, where $ATSHOME refers to the content of ATSHOME.

"))

')#comment("menu")

#HR(1)

<h2>#uid(
"installation_srccomp", "Installation through source compilation"
)</h2>

#menu('\
#lisub('\
#strong("Step 1:")
#para("\
After downloading a compressed tarball containing a release of ATS from the
following site:
")

#pcenter('\
<a href="http://sourceforge.net/projects/ats-lang/download">http://sourceforge.net/projects/ats-lang/download</a>
')#comment("pcenter")

#para("\

please untar it in a directory, say FOO, of your choice. This, for instance,
can be done by executing the following command line:

")

#command("tar -zvxf ATS.tar.gz")

#para("\

All the files and directories extracted from the tarball are now in the
directory #filename("FOO/ATS").

")
')#comment("lisub")

#lisub("\
#strong("Step 2:")
#para("\

Please execute the following command

")

#command("\
./configure --prefix=DESTDIR
")

#para("\

where DESTDIR refers to the directory into which ATS is to be installed.

If the argument [--prefix=DESTDIR] is missing, then the default directory
for installing ATS is #filename("/usr/local").

You can now go into the directory #filename("FOO/ATS") and execute

")

#command("make all")

#para("\

This generates executables #filename("atscc") and #filename("atsopt") in
the directory #filename("FOO/ATS/bin"), which are the commands you need for
compiling ATS programs, and a library file #filename("libats.a") in the
directory #filename("FOO/ATS/CCOMP/lib"), which you need for linking.

")
")#comment("lisub")

#lisub("\
#strong("Step 3:")
#para("\

Please set the environment variable ATSHOME to #filename("FOO/ATS") and
then set the environment variable ATSHOMERELOC to ATS-x.x.x, where x.x.x is
the version number of the compiled ATS package.

")
")#comment("lisub")

#lisub("\
#strong("Step 4:")

#para("\

Optionally, you may install ATS by executing the following
command line:

")

#command("make install")

#para("\

Then you set ATSHOME to #filename("DESTDIR/share/ats-anairiats-x.x.x"),
which is the directory where ATS is to be installed. The environment
variable ATSHOMERELOC is still set to ATS-x.x.x.

")#comment("para")
")#comment("lisub")

')

#HR(1)

<h2>#uid(
"installation_bootstrap", "Installation through bootstrapping"
)</h2>


#para('\

This installation method is
probably the best if you would like to keep abreast of the development of ATS.
Please find more details #ulink1("#ATSLANGWEBROOTget()/IMPLEMENT/\#ATS_Anairiats", "here").

')#comment("para")

</div>#comment("div/id=thePageBody-prop")
')#comment("strsub")

<!-- ****** ****** -->

#ignoretxt(
#strsub[thePageFooterSeparator]('\
<div class="Page-mysitelinks">
#mysitelinks3("DOWNLOAD")
</div>
'))

%{
implement
main () = {
//
val () =  $STDIO.fclose_exn (theCSSfilr)
//
val () = fprint_filsub (stdout_ref, "atslangweb_temp.html")
//
} // end of [main]
%}\
